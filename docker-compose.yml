version: '3.7'

services:
  
  nginx:
    container_name: nginx
    build: 
      context: "./nginx"
      dockerfile: "Dockerfile"
    ports: 
      - '80:80'
    volumes: 
      - ./nginx/conf:/etc/nginx
      - ./nginx/content:/usr/share/nginx/html

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: passdocker
      POSTGRES_USER: userdocker
      POSTGRES_DB: squares
    volumes:
      - ./postgresql:/var/lib/postgresql
      - ./postgresql_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    depends_on:
      - nginx

  app:
    container_name: application
    build: 
      context: "."
      dockerfile: "Dockerfile"
    command: npm start
    ports:
      - '8888'
    depends_on:
      - nginx
      - postgres
    environment:
      DB_HOST: postgres
      DB_USER: userdocker
      DB_PASSWORD: passdocker
      DB_SCHEMA: squares
      NODE_ENV: PROD
  